{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"C:\\\\Users\\\\Propietario\\\\griptape-tutorials\\\\hello-griptape\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\");\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\Propietario\\\\griptape-tutorials\\\\hello-griptape\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\Propietario\\\\griptape-tutorials\\\\hello-griptape\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar webcrypto_1 = require(\"./providers/webcrypto\");\n\nvar siv_1 = require(\"./siv\");\n/** AEAD interface provider for ISIVLike types */\n\n\nvar AEAD = /*#__PURE__*/function () {\n  _createClass(AEAD, null, [{\n    key: \"importKey\",\n\n    /** Create a new AEAD instance with the given key */\n    value: function importKey(keyData, alg) {\n      var provider = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : new webcrypto_1.WebCryptoProvider();\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.t0 = AEAD;\n                _context.next = 3;\n                return siv_1.SIV.importKey(keyData, alg, provider);\n\n              case 3:\n                _context.t1 = _context.sent;\n                return _context.abrupt(\"return\", new _context.t0(_context.t1));\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n    }\n  }]);\n\n  function AEAD(siv) {\n    _classCallCheck(this, AEAD);\n\n    this._siv = siv;\n  }\n  /** Encrypt and authenticate data using AES-SIV */\n\n\n  _createClass(AEAD, [{\n    key: \"seal\",\n    value: function seal(plaintext, nonce) {\n      var associatedData = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : new Uint8Array(0);\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                return _context2.abrupt(\"return\", this._siv.seal(plaintext, [associatedData, nonce]));\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n    }\n    /** Decrypt and authenticate data using AES-SIV */\n\n  }, {\n    key: \"open\",\n    value: function open(ciphertext, nonce) {\n      var associatedData = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : new Uint8Array(0);\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                return _context3.abrupt(\"return\", this._siv.open(ciphertext, [associatedData, nonce]));\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n    }\n    /** Make a best effort to wipe memory used by this instance */\n\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this._siv.clear();\n\n      return this;\n    }\n  }]);\n\n  return AEAD;\n}();\n\nexports.AEAD = AEAD;","map":null,"metadata":{},"sourceType":"script"}