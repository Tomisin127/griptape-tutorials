{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"C:\\\\Users\\\\Propietario\\\\hello-griptape-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/slicedToArray\");\n\nvar _regeneratorRuntime = require(\"C:\\\\Users\\\\Propietario\\\\hello-griptape-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"C:\\\\Users\\\\Propietario\\\\hello-griptape-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\Propietario\\\\hello-griptape-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\Propietario\\\\hello-griptape-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar encoding_1 = require(\"@iov/encoding\");\n\nvar axios_1 = __importDefault(require(\"axios\"));\n\nvar enigmautils_1 = __importDefault(require(\"./enigmautils\"));\n\nvar ProtoEncoding_1 = require(\"./ProtoEncoding\");\n\nfunction normalizeArray(backend) {\n  return backend || [];\n}\n/**\n * The mode used to send transaction\n *\n * @see https://cosmos.network/rpc/#/Transactions/post_txs\n */\n\n\nvar BroadcastMode;\n\n(function (BroadcastMode) {\n  /** Return after tx commit */\n  BroadcastMode[\"Block\"] = \"block\";\n  /** Return afer CheckTx */\n\n  BroadcastMode[\"Sync\"] = \"sync\";\n  /** Return right away */\n\n  BroadcastMode[\"Async\"] = \"async\";\n})(BroadcastMode = exports.BroadcastMode || (exports.BroadcastMode = {}));\n\nfunction isWasmError(resp) {\n  return resp.error !== undefined;\n}\n\nfunction unwrapWasmResponse(response) {\n  if (isWasmError(response)) {\n    throw new Error(response.error);\n  }\n\n  return response.result;\n} // We want to get message data from 500 errors\n// https://stackoverflow.com/questions/56577124/how-to-handle-500-error-message-with-axios\n// this should be chained to catch one error and throw a more informative one\n\n\nfunction parseAxiosError(err) {\n  var _a; // use the error message sent from server, not default 500 msg\n\n\n  if ((_a = err.response) === null || _a === void 0 ? void 0 : _a.data) {\n    var errorText;\n    var data = err.response.data; // expect { error: string }, but otherwise dump\n\n    if (data.error && typeof data.error === \"string\") {\n      errorText = data.error;\n    } else if (typeof data === \"string\") {\n      errorText = data;\n    } else {\n      errorText = JSON.stringify(data);\n    }\n\n    throw new Error(\"\".concat(errorText, \" (HTTP \").concat(err.response.status, \")\"));\n  } else {\n    throw err;\n  }\n}\n\nvar RestClient = /*#__PURE__*/function () {\n  /**\n   * Creates a new client to interact with a Cosmos SDK light client daemon.\n   * This class tries to be a direct mapping onto the API. Some basic decoding and normalizatin is done\n   * but things like caching are done at a higher level.\n   *\n   * When building apps, you should not need to use this class directly. If you do, this indicates a missing feature\n   * in higher level components. Feel free to raise an issue in this case.\n   *\n   * @param apiUrl The URL of a Cosmos SDK light client daemon API (sometimes called REST server or REST API)\n   * @param broadcastMode Defines at which point of the transaction processing the postTx method (i.e. transaction broadcasting) returns\n   * @param seed - The seed used to generate sender TX encryption key. If empty will generate random new one\n   */\n  function RestClient(apiUrl) {\n    var broadcastMode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BroadcastMode.Block;\n    var seed = arguments.length > 2 ? arguments[2] : undefined;\n\n    _classCallCheck(this, RestClient);\n\n    var headers = {\n      post: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    this.client = axios_1.default.create({\n      baseURL: apiUrl,\n      headers: headers\n    });\n    this.broadcastMode = broadcastMode;\n    this.enigmautils = new enigmautils_1.default(apiUrl, seed);\n    this.codeHashCache = new Map();\n  }\n\n  _createClass(RestClient, [{\n    key: \"get\",\n    value: function () {\n      var _get = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(path) {\n        var _yield$this$client$ge, data;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.client.get(path).catch(parseAxiosError);\n\n              case 2:\n                _yield$this$client$ge = _context.sent;\n                data = _yield$this$client$ge.data;\n\n                if (!(data === null)) {\n                  _context.next = 6;\n                  break;\n                }\n\n                throw new Error(\"Received null response from server\");\n\n              case 6:\n                return _context.abrupt(\"return\", data);\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function get(_x) {\n        return _get.apply(this, arguments);\n      }\n\n      return get;\n    }()\n  }, {\n    key: \"post\",\n    value: function () {\n      var _post = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(path, params) {\n        var _yield$this$client$po, data;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (encoding_1.isNonNullObject(params)) {\n                  _context2.next = 2;\n                  break;\n                }\n\n                throw new Error(\"Got unexpected type of params. Expected object.\");\n\n              case 2:\n                _context2.next = 4;\n                return this.client.post(path, params).catch(parseAxiosError);\n\n              case 4:\n                _yield$this$client$po = _context2.sent;\n                data = _yield$this$client$po.data;\n\n                if (!(data === null)) {\n                  _context2.next = 8;\n                  break;\n                }\n\n                throw new Error(\"Received null response from server\");\n\n              case 8:\n                return _context2.abrupt(\"return\", data);\n\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function post(_x2, _x3) {\n        return _post.apply(this, arguments);\n      }\n\n      return post;\n    }() // The /auth endpoints\n\n  }, {\n    key: \"authAccounts\",\n    value: function () {\n      var _authAccounts = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(address) {\n        var _yield$Promise$all, _yield$Promise$all2, authResp, bankResp, result;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return Promise.all([this.get(\"/auth/accounts/\".concat(address)), this.get(\"/bank/balances/\".concat(address))]);\n\n              case 2:\n                _yield$Promise$all = _context3.sent;\n                _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 2);\n                authResp = _yield$Promise$all2[0];\n                bankResp = _yield$Promise$all2[1];\n                result = {\n                  height: bankResp.height,\n                  result: {\n                    type: \"cosmos-sdk/Account\",\n                    value: {\n                      address: authResp.result.value.address,\n                      coins: bankResp.result,\n                      public_key: JSON.stringify(authResp.result.value.public_key),\n                      account_number: Number(authResp.result.value.account_number || 0),\n                      sequence: Number(authResp.result.value.sequence || 0)\n                    }\n                  }\n                };\n                return _context3.abrupt(\"return\", result);\n\n              case 8:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function authAccounts(_x4) {\n        return _authAccounts.apply(this, arguments);\n      }\n\n      return authAccounts;\n    }() // The /blocks endpoints\n\n  }, {\n    key: \"blocksLatest\",\n    value: function () {\n      var _blocksLatest = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        var responseData;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this.get(\"/blocks/latest\");\n\n              case 2:\n                responseData = _context4.sent;\n\n                if (responseData.block) {\n                  _context4.next = 5;\n                  break;\n                }\n\n                throw new Error(\"Unexpected response data format\");\n\n              case 5:\n                return _context4.abrupt(\"return\", responseData);\n\n              case 6:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function blocksLatest() {\n        return _blocksLatest.apply(this, arguments);\n      }\n\n      return blocksLatest;\n    }()\n  }, {\n    key: \"blocks\",\n    value: function () {\n      var _blocks = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(height) {\n        var responseData;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return this.get(\"/blocks/\".concat(height));\n\n              case 2:\n                responseData = _context5.sent;\n\n                if (responseData.block) {\n                  _context5.next = 5;\n                  break;\n                }\n\n                throw new Error(\"Unexpected response data format\");\n\n              case 5:\n                return _context5.abrupt(\"return\", responseData);\n\n              case 6:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function blocks(_x5) {\n        return _blocks.apply(this, arguments);\n      }\n\n      return blocks;\n    }() // The /node_info endpoint\n\n  }, {\n    key: \"nodeInfo\",\n    value: function () {\n      var _nodeInfo = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n        var responseData;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return this.get(\"/node_info\");\n\n              case 2:\n                responseData = _context6.sent;\n\n                if (responseData.node_info) {\n                  _context6.next = 5;\n                  break;\n                }\n\n                throw new Error(\"Unexpected response data format\");\n\n              case 5:\n                return _context6.abrupt(\"return\", responseData);\n\n              case 6:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function nodeInfo() {\n        return _nodeInfo.apply(this, arguments);\n      }\n\n      return nodeInfo;\n    }() // The /txs endpoints\n\n  }, {\n    key: \"txById\",\n    value: function () {\n      var _txById = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(id) {\n        var tryToDecrypt,\n            responseData,\n            _args7 = arguments;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                tryToDecrypt = _args7.length > 1 && _args7[1] !== undefined ? _args7[1] : true;\n                _context7.next = 3;\n                return this.get(\"/txs/\".concat(id));\n\n              case 3:\n                responseData = _context7.sent;\n\n                if (responseData.tx) {\n                  _context7.next = 6;\n                  break;\n                }\n\n                throw new Error(\"Unexpected response data format\");\n\n              case 6:\n                if (!tryToDecrypt) {\n                  _context7.next = 10;\n                  break;\n                }\n\n                return _context7.abrupt(\"return\", this.decryptTxsResponse(responseData));\n\n              case 10:\n                return _context7.abrupt(\"return\", responseData);\n\n              case 11:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function txById(_x6) {\n        return _txById.apply(this, arguments);\n      }\n\n      return txById;\n    }()\n  }, {\n    key: \"txsQuery\",\n    value: function () {\n      var _txsQuery = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(query) {\n        var tryToDecrypt,\n            responseData,\n            resp,\n            i,\n            _args8 = arguments;\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                tryToDecrypt = _args8.length > 1 && _args8[1] !== undefined ? _args8[1] : true;\n                _context8.next = 3;\n                return this.get(\"/txs?\".concat(query));\n\n              case 3:\n                responseData = _context8.sent;\n\n                if (responseData.txs) {\n                  _context8.next = 6;\n                  break;\n                }\n\n                throw new Error(\"Unexpected response data format\");\n\n              case 6:\n                resp = responseData;\n\n                if (!tryToDecrypt) {\n                  _context8.next = 16;\n                  break;\n                }\n\n                i = 0;\n\n              case 9:\n                if (!(i < resp.txs.length)) {\n                  _context8.next = 16;\n                  break;\n                }\n\n                _context8.next = 12;\n                return this.decryptTxsResponse(resp.txs[i]);\n\n              case 12:\n                resp.txs[i] = _context8.sent;\n\n              case 13:\n                i++;\n                _context8.next = 9;\n                break;\n\n              case 16:\n                return _context8.abrupt(\"return\", resp);\n\n              case 17:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function txsQuery(_x7) {\n        return _txsQuery.apply(this, arguments);\n      }\n\n      return txsQuery;\n    }()\n    /** returns the amino-encoding of the transaction performed by the server */\n\n  }, {\n    key: \"encodeTx\",\n    value: function () {\n      var _encodeTx = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(tx) {\n        var responseData;\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                _context9.next = 2;\n                return this.post(\"/txs/encode\", tx);\n\n              case 2:\n                responseData = _context9.sent;\n\n                if (responseData.tx) {\n                  _context9.next = 5;\n                  break;\n                }\n\n                throw new Error(\"Unexpected response data format\");\n\n              case 5:\n                return _context9.abrupt(\"return\", encoding_1.Encoding.fromBase64(responseData.tx));\n\n              case 6:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function encodeTx(_x8) {\n        return _encodeTx.apply(this, arguments);\n      }\n\n      return encodeTx;\n    }()\n    /**\n     * Broadcasts a signed transaction to into the transaction pool.\n     * Depending on the RestClient's broadcast mode, this might or might\n     * wait for checkTx or deliverTx to be executed before returning.\n     *\n     * @param tx a signed transaction as StdTx (i.e. not wrapped in type/value container)\n     */\n\n  }, {\n    key: \"postTx\",\n    value: function () {\n      var _postTx = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10(tx) {\n        var params, responseData;\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                params = {\n                  tx: tx,\n                  mode: this.broadcastMode\n                };\n                _context10.next = 3;\n                return this.post(\"/txs\", params);\n\n              case 3:\n                responseData = _context10.sent;\n\n                if (responseData.txhash) {\n                  _context10.next = 6;\n                  break;\n                }\n\n                throw new Error(\"Unexpected response data format\");\n\n              case 6:\n                return _context10.abrupt(\"return\", responseData);\n\n              case 7:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n\n      function postTx(_x9) {\n        return _postTx.apply(this, arguments);\n      }\n\n      return postTx;\n    }() // The /wasm endpoints\n    // wasm rest queries are listed here: https://github.com/cosmwasm/wasmd/blob/master/x/wasm/client/rest/query.go#L19-L27\n\n  }, {\n    key: \"listCodeInfo\",\n    value: function () {\n      var _listCodeInfo = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11() {\n        var path, responseData;\n        return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                path = \"/wasm/code\";\n                _context11.next = 3;\n                return this.get(path);\n\n              case 3:\n                responseData = _context11.sent;\n                _context11.t0 = normalizeArray;\n                _context11.next = 7;\n                return unwrapWasmResponse(responseData);\n\n              case 7:\n                _context11.t1 = _context11.sent;\n                return _context11.abrupt(\"return\", (0, _context11.t0)(_context11.t1));\n\n              case 9:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this);\n      }));\n\n      function listCodeInfo() {\n        return _listCodeInfo.apply(this, arguments);\n      }\n\n      return listCodeInfo;\n    }() // this will download the original wasm bytecode by code id\n    // throws error if no code with this id\n\n  }, {\n    key: \"getCode\",\n    value: function () {\n      var _getCode = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee12(id) {\n        var path, responseData;\n        return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                path = \"/wasm/code/\".concat(id);\n                _context12.next = 3;\n                return this.get(path);\n\n              case 3:\n                responseData = _context12.sent;\n                _context12.next = 6;\n                return unwrapWasmResponse(responseData);\n\n              case 6:\n                return _context12.abrupt(\"return\", _context12.sent);\n\n              case 7:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, this);\n      }));\n\n      function getCode(_x10) {\n        return _getCode.apply(this, arguments);\n      }\n\n      return getCode;\n    }()\n  }, {\n    key: \"listContractsByCodeId\",\n    value: function () {\n      var _listContractsByCodeId = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee13(id) {\n        var path, responseData;\n        return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                path = \"/wasm/code/\".concat(id, \"/contracts\");\n                _context13.next = 3;\n                return this.get(path);\n\n              case 3:\n                responseData = _context13.sent;\n                _context13.t0 = normalizeArray;\n                _context13.next = 7;\n                return unwrapWasmResponse(responseData);\n\n              case 7:\n                _context13.t1 = _context13.sent;\n                return _context13.abrupt(\"return\", (0, _context13.t0)(_context13.t1));\n\n              case 9:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13, this);\n      }));\n\n      function listContractsByCodeId(_x11) {\n        return _listContractsByCodeId.apply(this, arguments);\n      }\n\n      return listContractsByCodeId;\n    }()\n  }, {\n    key: \"getCodeHashByCodeId\",\n    value: function () {\n      var _getCodeHashByCodeId = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee14(id) {\n        var codeHashFromCache, path, responseData;\n        return _regeneratorRuntime.wrap(function _callee14$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                codeHashFromCache = this.codeHashCache.get(id);\n\n                if (!(typeof codeHashFromCache === \"string\")) {\n                  _context14.next = 3;\n                  break;\n                }\n\n                return _context14.abrupt(\"return\", codeHashFromCache);\n\n              case 3:\n                path = \"/wasm/code/\".concat(id, \"/hash\");\n                _context14.next = 6;\n                return this.get(path);\n\n              case 6:\n                responseData = _context14.sent;\n                this.codeHashCache.set(id, responseData.result);\n                return _context14.abrupt(\"return\", responseData.result);\n\n              case 9:\n              case \"end\":\n                return _context14.stop();\n            }\n          }\n        }, _callee14, this);\n      }));\n\n      function getCodeHashByCodeId(_x12) {\n        return _getCodeHashByCodeId.apply(this, arguments);\n      }\n\n      return getCodeHashByCodeId;\n    }()\n  }, {\n    key: \"getCodeHashByContractAddr\",\n    value: function () {\n      var _getCodeHashByContractAddr = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee15(addr) {\n        var codeHashFromCache, path, responseData;\n        return _regeneratorRuntime.wrap(function _callee15$(_context15) {\n          while (1) {\n            switch (_context15.prev = _context15.next) {\n              case 0:\n                codeHashFromCache = this.codeHashCache.get(addr);\n\n                if (!(typeof codeHashFromCache === \"string\")) {\n                  _context15.next = 3;\n                  break;\n                }\n\n                return _context15.abrupt(\"return\", codeHashFromCache);\n\n              case 3:\n                path = \"/wasm/contract/\".concat(addr, \"/code-hash\");\n                _context15.next = 6;\n                return this.get(path);\n\n              case 6:\n                responseData = _context15.sent;\n                this.codeHashCache.set(addr, responseData.result);\n                return _context15.abrupt(\"return\", responseData.result);\n\n              case 9:\n              case \"end\":\n                return _context15.stop();\n            }\n          }\n        }, _callee15, this);\n      }));\n\n      function getCodeHashByContractAddr(_x13) {\n        return _getCodeHashByContractAddr.apply(this, arguments);\n      }\n\n      return getCodeHashByContractAddr;\n    }()\n    /**\n     * Returns null when contract was not found at this address.\n     */\n\n  }, {\n    key: \"getContractInfo\",\n    value: function () {\n      var _getContractInfo = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee16(address) {\n        var path, response;\n        return _regeneratorRuntime.wrap(function _callee16$(_context16) {\n          while (1) {\n            switch (_context16.prev = _context16.next) {\n              case 0:\n                path = \"/wasm/contract/\".concat(address);\n                _context16.next = 3;\n                return this.get(path);\n\n              case 3:\n                response = _context16.sent;\n                _context16.next = 6;\n                return unwrapWasmResponse(response);\n\n              case 6:\n                return _context16.abrupt(\"return\", _context16.sent);\n\n              case 7:\n              case \"end\":\n                return _context16.stop();\n            }\n          }\n        }, _callee16, this);\n      }));\n\n      function getContractInfo(_x14) {\n        return _getContractInfo.apply(this, arguments);\n      }\n\n      return getContractInfo;\n    }()\n    /**\n     * Makes a smart query on the contract and parses the reponse as JSON.\n     * Throws error if no such contract exists, the query format is invalid or the response is invalid.\n     */\n\n  }, {\n    key: \"queryContractSmart\",\n    value: function () {\n      var _queryContractSmart = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee17(contractAddress, query, addedParams, contractCodeHash) {\n        var _a, encrypted, nonce, encoded, paramString, path, responseData, errorMessageRgx, rgxMatches, errorCipherB64, errorCipherBz, errorPlainBz;\n\n        return _regeneratorRuntime.wrap(function _callee17$(_context17) {\n          while (1) {\n            switch (_context17.prev = _context17.next) {\n              case 0:\n                if (contractCodeHash) {\n                  _context17.next = 6;\n                  break;\n                }\n\n                _context17.next = 3;\n                return this.getCodeHashByContractAddr(contractAddress);\n\n              case 3:\n                contractCodeHash = _context17.sent;\n                _context17.next = 7;\n                break;\n\n              case 6:\n                this.codeHashCache.set(contractAddress, contractCodeHash);\n\n              case 7:\n                _context17.next = 9;\n                return this.enigmautils.encrypt(contractCodeHash, query);\n\n              case 9:\n                encrypted = _context17.sent;\n                nonce = encrypted.slice(0, 32);\n                encoded = encoding_1.Encoding.toHex(encoding_1.Encoding.toUtf8(encoding_1.Encoding.toBase64(encrypted))); // @ts-ignore\n\n                paramString = new URLSearchParams(addedParams).toString();\n                path = \"/wasm/contract/\".concat(contractAddress, \"/query/\").concat(encoded, \"?encoding=hex&\").concat(paramString);\n                _context17.prev = 14;\n                _context17.next = 17;\n                return this.get(path);\n\n              case 17:\n                responseData = _context17.sent;\n                _context17.next = 39;\n                break;\n\n              case 20:\n                _context17.prev = 20;\n                _context17.t0 = _context17[\"catch\"](14);\n                _context17.prev = 22;\n                errorMessageRgx = /encrypted: (.+?): (?:instantiate|execute|query) contract failed \\(HTTP 500\\)/g;\n                rgxMatches = errorMessageRgx.exec(_context17.t0.message);\n\n                if (!(rgxMatches == null || ((_a = rgxMatches) === null || _a === void 0 ? void 0 : _a.length) != 2)) {\n                  _context17.next = 27;\n                  break;\n                }\n\n                throw _context17.t0;\n\n              case 27:\n                errorCipherB64 = rgxMatches[1];\n                errorCipherBz = encoding_1.Encoding.fromBase64(errorCipherB64);\n                _context17.next = 31;\n                return this.enigmautils.decrypt(errorCipherBz, nonce);\n\n              case 31:\n                errorPlainBz = _context17.sent;\n                _context17.t0.message = _context17.t0.message.replace(errorCipherB64, encoding_1.Encoding.fromUtf8(errorPlainBz));\n                _context17.next = 38;\n                break;\n\n              case 35:\n                _context17.prev = 35;\n                _context17.t1 = _context17[\"catch\"](22);\n                throw new Error(\"Failed to decrypt the following error message: \".concat(_context17.t0.message, \".\"));\n\n              case 38:\n                throw _context17.t0;\n\n              case 39:\n                if (!isWasmError(responseData)) {\n                  _context17.next = 47;\n                  break;\n                }\n\n                _context17.t2 = Error;\n                _context17.t3 = JSON;\n                _context17.next = 44;\n                return this.enigmautils.decrypt(encoding_1.Encoding.fromBase64(responseData.error), nonce);\n\n              case 44:\n                _context17.t4 = _context17.sent;\n                _context17.t5 = _context17.t3.stringify.call(_context17.t3, _context17.t4);\n                throw new _context17.t2(_context17.t5);\n\n              case 47:\n                _context17.t6 = JSON;\n                _context17.t7 = encoding_1.Encoding;\n                _context17.t8 = encoding_1.Encoding;\n                _context17.t9 = encoding_1.Encoding;\n                _context17.next = 53;\n                return this.enigmautils.decrypt(encoding_1.Encoding.fromBase64(responseData.result.smart), nonce);\n\n              case 53:\n                _context17.t10 = _context17.sent;\n                _context17.t11 = _context17.t9.fromUtf8.call(_context17.t9, _context17.t10);\n                _context17.t12 = _context17.t8.fromBase64.call(_context17.t8, _context17.t11);\n                _context17.t13 = _context17.t7.fromUtf8.call(_context17.t7, _context17.t12);\n                return _context17.abrupt(\"return\", _context17.t6.parse.call(_context17.t6, _context17.t13));\n\n              case 58:\n              case \"end\":\n                return _context17.stop();\n            }\n          }\n        }, _callee17, this, [[14, 20], [22, 35]]);\n      }));\n\n      function queryContractSmart(_x15, _x16, _x17, _x18) {\n        return _queryContractSmart.apply(this, arguments);\n      }\n\n      return queryContractSmart;\n    }()\n    /**\n     * Get the consensus keypair for IO encryption\n     */\n\n  }, {\n    key: \"getMasterCerts\",\n    value: function () {\n      var _getMasterCerts = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee18(address, query) {\n        return _regeneratorRuntime.wrap(function _callee18$(_context18) {\n          while (1) {\n            switch (_context18.prev = _context18.next) {\n              case 0:\n                return _context18.abrupt(\"return\", this.get(\"/register/master-cert\"));\n\n              case 1:\n              case \"end\":\n                return _context18.stop();\n            }\n          }\n        }, _callee18, this);\n      }));\n\n      function getMasterCerts(_x19, _x20) {\n        return _getMasterCerts.apply(this, arguments);\n      }\n\n      return getMasterCerts;\n    }()\n  }, {\n    key: \"decryptDataField\",\n    value: function () {\n      var _decryptDataField = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee19() {\n        var dataField,\n            nonces,\n            wasmOutputDataCipherBz,\n            error,\n            _iterator,\n            _step,\n            nonce,\n            data,\n            _args19 = arguments;\n\n        return _regeneratorRuntime.wrap(function _callee19$(_context19) {\n          while (1) {\n            switch (_context19.prev = _context19.next) {\n              case 0:\n                dataField = _args19.length > 0 && _args19[0] !== undefined ? _args19[0] : \"\";\n                nonces = _args19.length > 1 ? _args19[1] : undefined;\n                wasmOutputDataCipherBz = encoding_1.Encoding.fromHex(dataField);\n                _iterator = _createForOfIteratorHelper(nonces);\n                _context19.prev = 4;\n\n                _iterator.s();\n\n              case 6:\n                if ((_step = _iterator.n()).done) {\n                  _context19.next = 24;\n                  break;\n                }\n\n                nonce = _step.value;\n                _context19.prev = 8;\n                _context19.t0 = encoding_1.Encoding;\n                _context19.t1 = encoding_1.Encoding;\n                _context19.next = 13;\n                return this.enigmautils.decrypt(wasmOutputDataCipherBz, nonce);\n\n              case 13:\n                _context19.t2 = _context19.sent;\n                _context19.t3 = _context19.t1.fromUtf8.call(_context19.t1, _context19.t2);\n                data = _context19.t0.fromBase64.call(_context19.t0, _context19.t3);\n                return _context19.abrupt(\"return\", data);\n\n              case 19:\n                _context19.prev = 19;\n                _context19.t4 = _context19[\"catch\"](8);\n                error = _context19.t4;\n\n              case 22:\n                _context19.next = 6;\n                break;\n\n              case 24:\n                _context19.next = 29;\n                break;\n\n              case 26:\n                _context19.prev = 26;\n                _context19.t5 = _context19[\"catch\"](4);\n\n                _iterator.e(_context19.t5);\n\n              case 29:\n                _context19.prev = 29;\n\n                _iterator.f();\n\n                return _context19.finish(29);\n\n              case 32:\n                throw error;\n\n              case 33:\n              case \"end\":\n                return _context19.stop();\n            }\n          }\n        }, _callee19, this, [[4, 26, 29, 32], [8, 19]]);\n      }));\n\n      function decryptDataField() {\n        return _decryptDataField.apply(this, arguments);\n      }\n\n      return decryptDataField;\n    }()\n  }, {\n    key: \"decryptLogs\",\n    value: function () {\n      var _decryptLogs = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee20(logs, nonces) {\n        var _iterator2, _step2, l, _iterator3, _step3, e, _iterator4, _step4, nonce, nonceOk, _iterator5, _step5, a;\n\n        return _regeneratorRuntime.wrap(function _callee20$(_context20) {\n          while (1) {\n            switch (_context20.prev = _context20.next) {\n              case 0:\n                _iterator2 = _createForOfIteratorHelper(logs);\n                _context20.prev = 1;\n\n                _iterator2.s();\n\n              case 3:\n                if ((_step2 = _iterator2.n()).done) {\n                  _context20.next = 78;\n                  break;\n                }\n\n                l = _step2.value;\n                _iterator3 = _createForOfIteratorHelper(l.events);\n                _context20.prev = 6;\n\n                _iterator3.s();\n\n              case 8:\n                if ((_step3 = _iterator3.n()).done) {\n                  _context20.next = 68;\n                  break;\n                }\n\n                e = _step3.value;\n\n                if (!(e.type === \"wasm\")) {\n                  _context20.next = 66;\n                  break;\n                }\n\n                _iterator4 = _createForOfIteratorHelper(nonces);\n                _context20.prev = 12;\n\n                _iterator4.s();\n\n              case 14:\n                if ((_step4 = _iterator4.n()).done) {\n                  _context20.next = 58;\n                  break;\n                }\n\n                nonce = _step4.value;\n                nonceOk = false;\n                _iterator5 = _createForOfIteratorHelper(e.attributes);\n                _context20.prev = 18;\n\n                _iterator5.s();\n\n              case 20:\n                if ((_step5 = _iterator5.n()).done) {\n                  _context20.next = 46;\n                  break;\n                }\n\n                a = _step5.value;\n                _context20.prev = 22;\n                _context20.t0 = encoding_1.Encoding;\n                _context20.next = 26;\n                return this.enigmautils.decrypt(encoding_1.Encoding.fromBase64(a.key), nonce);\n\n              case 26:\n                _context20.t1 = _context20.sent;\n                a.key = _context20.t0.fromUtf8.call(_context20.t0, _context20.t1);\n                nonceOk = true;\n                _context20.next = 33;\n                break;\n\n              case 31:\n                _context20.prev = 31;\n                _context20.t2 = _context20[\"catch\"](22);\n\n              case 33:\n                _context20.prev = 33;\n                _context20.t3 = encoding_1.Encoding;\n                _context20.next = 37;\n                return this.enigmautils.decrypt(encoding_1.Encoding.fromBase64(a.value), nonce);\n\n              case 37:\n                _context20.t4 = _context20.sent;\n                a.value = _context20.t3.fromUtf8.call(_context20.t3, _context20.t4);\n                nonceOk = true;\n                _context20.next = 44;\n                break;\n\n              case 42:\n                _context20.prev = 42;\n                _context20.t5 = _context20[\"catch\"](33);\n\n              case 44:\n                _context20.next = 20;\n                break;\n\n              case 46:\n                _context20.next = 51;\n                break;\n\n              case 48:\n                _context20.prev = 48;\n                _context20.t6 = _context20[\"catch\"](18);\n\n                _iterator5.e(_context20.t6);\n\n              case 51:\n                _context20.prev = 51;\n\n                _iterator5.f();\n\n                return _context20.finish(51);\n\n              case 54:\n                if (!nonceOk) {\n                  _context20.next = 56;\n                  break;\n                }\n\n                return _context20.abrupt(\"continue\", 56);\n\n              case 56:\n                _context20.next = 14;\n                break;\n\n              case 58:\n                _context20.next = 63;\n                break;\n\n              case 60:\n                _context20.prev = 60;\n                _context20.t7 = _context20[\"catch\"](12);\n\n                _iterator4.e(_context20.t7);\n\n              case 63:\n                _context20.prev = 63;\n\n                _iterator4.f();\n\n                return _context20.finish(63);\n\n              case 66:\n                _context20.next = 8;\n                break;\n\n              case 68:\n                _context20.next = 73;\n                break;\n\n              case 70:\n                _context20.prev = 70;\n                _context20.t8 = _context20[\"catch\"](6);\n\n                _iterator3.e(_context20.t8);\n\n              case 73:\n                _context20.prev = 73;\n\n                _iterator3.f();\n\n                return _context20.finish(73);\n\n              case 76:\n                _context20.next = 3;\n                break;\n\n              case 78:\n                _context20.next = 83;\n                break;\n\n              case 80:\n                _context20.prev = 80;\n                _context20.t9 = _context20[\"catch\"](1);\n\n                _iterator2.e(_context20.t9);\n\n              case 83:\n                _context20.prev = 83;\n\n                _iterator2.f();\n\n                return _context20.finish(83);\n\n              case 86:\n                return _context20.abrupt(\"return\", logs);\n\n              case 87:\n              case \"end\":\n                return _context20.stop();\n            }\n          }\n        }, _callee20, this, [[1, 80, 83, 86], [6, 70, 73, 76], [12, 60, 63, 66], [18, 48, 51, 54], [22, 31], [33, 42]]);\n      }));\n\n      function decryptLogs(_x21, _x22) {\n        return _decryptLogs.apply(this, arguments);\n      }\n\n      return decryptLogs;\n    }()\n  }, {\n    key: \"decryptTxsResponse\",\n    value: function () {\n      var _decryptTxsResponse = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee21(txsResponse) {\n        var _a, _b, _c, dataFields, data, logs, i, msg, inputMsgEncrypted, inputMsgPubkey, nonce, inputMsg, errorMessageRgx, rgxMatches, errorCipherB64, errorCipherBz, errorPlainBz;\n\n        return _regeneratorRuntime.wrap(function _callee21$(_context21) {\n          while (1) {\n            switch (_context21.prev = _context21.next) {\n              case 0:\n                data = Uint8Array.from([]);\n\n                if (txsResponse.data) {\n                  dataFields = ProtoEncoding_1.decodeTxData(encoding_1.Encoding.fromHex(txsResponse.data));\n                }\n\n                logs = txsResponse.logs;\n\n                if (logs) {\n                  logs[0].msg_index = 0;\n                }\n\n                i = 0;\n\n              case 5:\n                if (!(i < ((_a = txsResponse.tx.value.msg) === null || _a === void 0 ? void 0 : _a.length))) {\n                  _context21.next = 57;\n                  break;\n                }\n\n                msg = txsResponse.tx.value.msg[i];\n                inputMsgEncrypted = void 0;\n\n                if (!(msg.type === \"wasm/MsgExecuteContract\")) {\n                  _context21.next = 12;\n                  break;\n                }\n\n                inputMsgEncrypted = encoding_1.Encoding.fromBase64(msg.value.msg);\n                _context21.next = 17;\n                break;\n\n              case 12:\n                if (!(msg.type === \"wasm/MsgInstantiateContract\")) {\n                  _context21.next = 16;\n                  break;\n                }\n\n                inputMsgEncrypted = encoding_1.Encoding.fromBase64(msg.value.init_msg);\n                _context21.next = 17;\n                break;\n\n              case 16:\n                return _context21.abrupt(\"continue\", 54);\n\n              case 17:\n                inputMsgPubkey = inputMsgEncrypted.slice(32, 64);\n                _context21.t0 = encoding_1.Encoding;\n                _context21.next = 21;\n                return this.enigmautils.getPubkey();\n\n              case 21:\n                _context21.t1 = _context21.sent;\n                _context21.t2 = _context21.t0.toBase64.call(_context21.t0, _context21.t1);\n                _context21.t3 = encoding_1.Encoding.toBase64(inputMsgPubkey);\n\n                if (!(_context21.t2 === _context21.t3)) {\n                  _context21.next = 54;\n                  break;\n                }\n\n                // my pubkey, can decrypt\n                nonce = inputMsgEncrypted.slice(0, 32); // decrypt input\n\n                _context21.t4 = encoding_1.Encoding;\n                _context21.next = 29;\n                return this.enigmautils.decrypt(inputMsgEncrypted.slice(64), nonce);\n\n              case 29:\n                _context21.t5 = _context21.sent;\n                inputMsg = _context21.t4.fromUtf8.call(_context21.t4, _context21.t5);\n\n                if (!(msg.type === \"wasm/MsgExecuteContract\")) {\n                  _context21.next = 39;\n                  break;\n                }\n\n                // decrypt input\n                txsResponse.tx.value.msg[i].value.msg = inputMsg; // decrypt output data\n                // stupid workaround because only 1st message data is returned\n\n                if (!(dataFields && i == 0 && dataFields[0].data)) {\n                  _context21.next = 37;\n                  break;\n                }\n\n                _context21.next = 36;\n                return this.decryptDataField(encoding_1.Encoding.toHex(encoding_1.Encoding.fromBase64(dataFields[0].data)), [nonce]);\n\n              case 36:\n                data = _context21.sent;\n\n              case 37:\n                _context21.next = 40;\n                break;\n\n              case 39:\n                if (msg.type === \"wasm/MsgInstantiateContract\") {\n                  // decrypt input\n                  txsResponse.tx.value.msg[i].value.init_msg = inputMsg;\n                }\n\n              case 40:\n                if (!(txsResponse.logs && logs)) {\n                  _context21.next = 45;\n                  break;\n                }\n\n                if (!((_b = txsResponse.logs[i]) === null || _b === void 0 ? void 0 : _b.log)) {\n                  logs[i].log = \"\";\n                }\n\n                _context21.next = 44;\n                return this.decryptLogs([txsResponse.logs[i]], [nonce]);\n\n              case 44:\n                logs[i] = _context21.sent[0];\n\n              case 45:\n                // failed to execute message; message index: 0: encrypted: (.+?): (?:instantiate|execute|query) contract failed\n                // decrypt error\n                errorMessageRgx = new RegExp(\"failed to execute message; message index: \".concat(i, \": encrypted: (.+?): (?:instantiate|execute|query) contract failed\"), \"g\");\n                rgxMatches = errorMessageRgx.exec(txsResponse.raw_log);\n\n                if (!(Array.isArray(rgxMatches) && ((_c = rgxMatches) === null || _c === void 0 ? void 0 : _c.length) === 2)) {\n                  _context21.next = 54;\n                  break;\n                }\n\n                errorCipherB64 = rgxMatches[1];\n                errorCipherBz = encoding_1.Encoding.fromBase64(errorCipherB64);\n                _context21.next = 52;\n                return this.enigmautils.decrypt(errorCipherBz, nonce);\n\n              case 52:\n                errorPlainBz = _context21.sent;\n                txsResponse.raw_log = txsResponse.raw_log.replace(errorCipherB64, encoding_1.Encoding.fromUtf8(errorPlainBz));\n\n              case 54:\n                i++;\n                _context21.next = 5;\n                break;\n\n              case 57:\n                txsResponse = Object.assign({}, txsResponse, {\n                  logs: logs\n                }); // @ts-ignore\n\n                txsResponse.data = data;\n                return _context21.abrupt(\"return\", txsResponse);\n\n              case 60:\n              case \"end\":\n                return _context21.stop();\n            }\n          }\n        }, _callee21, this);\n      }));\n\n      function decryptTxsResponse(_x23) {\n        return _decryptTxsResponse.apply(this, arguments);\n      }\n\n      return decryptTxsResponse;\n    }()\n  }]);\n\n  return RestClient;\n}();\n\nexports.RestClient = RestClient;","map":null,"metadata":{},"sourceType":"script"}