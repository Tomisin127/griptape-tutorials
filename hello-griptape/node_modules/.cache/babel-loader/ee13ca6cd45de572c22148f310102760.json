{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bech32 = exports.coinConvert = void 0;\n\nvar decimal_js_1 = require(\"decimal.js\");\n\ndecimal_js_1.Decimal.set({\n  toExpPos: 50\n});\n\nfunction coinConvert(number, decimals, type, fixed) {\n  if (!number) return '';\n  var theNumber = number;\n\n  if (typeof number === 'number') {\n    theNumber = number.toString();\n  }\n\n  if (theNumber.indexOf('.') === -1) {\n    var result = void 0;\n\n    if (type && type === 'machine') {\n      result = new decimal_js_1.Decimal(10).toPower(decimals).times(number);\n    } else {\n      result = new decimal_js_1.Decimal(number).dividedBy(new decimal_js_1.Decimal(10).toPower(decimals));\n    }\n\n    if (typeof fixed !== 'undefined') {\n      return result.toFixed(fixed);\n    }\n\n    return result.toString();\n  } else {\n    var result = void 0;\n\n    if (type && type === 'human') {\n      result = new decimal_js_1.Decimal(number);\n    } else {\n      result = new decimal_js_1.Decimal(10).toPower(decimals).times(number);\n    }\n\n    if (typeof fixed !== 'undefined') {\n      return result.toFixed(fixed);\n    }\n\n    return result.toString();\n  }\n}\n\nexports.coinConvert = coinConvert;\n\nfunction bech32(str, abbrv) {\n  if (!str) return '';\n  var half = abbrv / 2 || 8;\n  return str.substring(0, half) + '...' + str.substring(str.length - half, str.length);\n}\n\nexports.bech32 = bech32;","map":null,"metadata":{},"sourceType":"script"}