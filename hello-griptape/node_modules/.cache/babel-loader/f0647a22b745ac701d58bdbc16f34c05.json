{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sleep = exports.getFeeForExecute = exports.calculateCommonKeys = exports.getEntropyString = exports.hasOwnDeepProperty = exports.getValue = void 0;\n\nfunction getValue(object, key) {\n  var value;\n  Object.keys(object).some(function (k) {\n    if (k === key) {\n      value = object[k];\n      return true;\n    }\n\n    if (object[k] && typeof object[k] === 'object') {\n      value = getValue(object[k], key);\n      return value !== undefined;\n    }\n  });\n  return value;\n}\n\nexports.getValue = getValue;\n\nfunction hasOwnDeepProperty(obj, prop) {\n  if (typeof obj === 'object' && obj !== null) {\n    if (obj.hasOwnProperty(prop)) {\n      return true;\n    }\n\n    for (var p in obj) {\n      if (obj.hasOwnProperty(p) && hasOwnDeepProperty(obj[p], prop)) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nexports.hasOwnDeepProperty = hasOwnDeepProperty;\n\nfunction getEntropyString(length) {\n  var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  var charactersLength = characters.length;\n  var result = '';\n\n  for (var i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n\n  return result;\n}\n\nexports.getEntropyString = getEntropyString;\n\nfunction calculateCommonKeys(baseKeys, defKeys) {\n  if (baseKeys.length === 0 || defKeys.length === 0) return [];\n  var result = baseKeys.filter(function (key) {\n    return defKeys.find(function (k) {\n      return k === key;\n    });\n  });\n  return result;\n}\n\nexports.calculateCommonKeys = calculateCommonKeys;\nvar gasPriceUscrt = 0.25;\n\nfunction getFeeForExecute(gas) {\n  if (!gas) return undefined;\n  return {\n    amount: [{\n      amount: String(Math.floor(gas * gasPriceUscrt) + 1),\n      denom: 'uscrt'\n    }],\n    gas: String(gas)\n  };\n}\n\nexports.getFeeForExecute = getFeeForExecute;\n\nvar sleep = function sleep(ms) {\n  return new Promise(function (resolve) {\n    return setTimeout(resolve, ms);\n  });\n};\n\nexports.sleep = sleep;","map":null,"metadata":{},"sourceType":"script"}