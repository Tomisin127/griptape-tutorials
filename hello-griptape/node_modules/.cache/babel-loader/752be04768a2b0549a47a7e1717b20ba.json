{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getNativeCoinBalance = exports.getSigningClient = exports.getClient = exports.getContracts = exports.instantiate = exports.getHeight = exports.getChainId = exports.getKeplrAccountProvider = exports.executeContract = exports.queryContract = exports.shutdown = exports.bootstrap = exports.gripApp = exports.isAccountAvailable = exports.getAddress = exports.getConfig = exports.keplrViewingKeyManager = exports.viewingKeyManager = exports.BroadcastMode = void 0;\n\nvar wallet_1 = require(\"./wallet\");\n\nvar secretjs_1 = require(\"secretjs\");\n\nObject.defineProperty(exports, \"BroadcastMode\", {\n  enumerable: true,\n  get: function get() {\n    return secretjs_1.BroadcastMode;\n  }\n});\n\nvar viewing_keys_1 = require(\"./viewing-keys\");\n\nvar events_1 = require(\"./events\");\n\nvar customFees = {\n  upload: {\n    amount: [{\n      amount: '2000000',\n      denom: 'uscrt'\n    }],\n    gas: '2000000'\n  },\n  init: {\n    amount: [{\n      amount: '500000',\n      denom: 'uscrt'\n    }],\n    gas: '500000'\n  },\n  exec: {\n    amount: [{\n      amount: '750000',\n      denom: 'uscrt'\n    }],\n    gas: '750000'\n  },\n  send: {\n    amount: [{\n      amount: '80000',\n      denom: 'uscrt'\n    }],\n    gas: '80000'\n  }\n};\nvar config;\nvar client;\nvar signingClient;\nvar provider;\nvar getProvider;\nvar accountAvailable = false;\nexports.viewingKeyManager = new viewing_keys_1.ViewingKeyManager();\nexports.keplrViewingKeyManager = new viewing_keys_1.KeplrViewingKeyManager(exports.viewingKeyManager);\n\nfunction getConfig() {\n  return config;\n}\n\nexports.getConfig = getConfig;\n\nfunction getAddress() {\n  return provider === null || provider === void 0 ? void 0 : provider.getAddress();\n}\n\nexports.getAddress = getAddress;\n\nfunction isAccountAvailable() {\n  return accountAvailable;\n}\n\nexports.isAccountAvailable = isAccountAvailable;\n\nfunction gripApp(_config, accountProviderGetter, runApp) {\n  var _a;\n\n  return __awaiter(this, void 0, void 0, function () {\n    var chainId, connected;\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          if (!!config) return [3, 5];\n\n          if (typeof _config === 'string') {\n            config = {\n              restUrl: _config,\n              broadcastMode: secretjs_1.BroadcastMode.Sync\n            };\n          } else {\n            _config.broadcastMode = (_a = _config.broadcastMode) !== null && _a !== void 0 ? _a : secretjs_1.BroadcastMode.Sync;\n            config = _config;\n          }\n\n          return [4, initClient()];\n\n        case 1:\n          _b.sent();\n\n          runApp();\n          return [4, getChainId()];\n\n        case 2:\n          chainId = _b.sent();\n          getProvider = accountProviderGetter;\n          connected = localStorage.getItem('connected');\n\n          if (connected == null) {\n            events_1.emitEvent('account-not-available');\n            throw new Error('Not connected yet');\n          }\n\n          return [4, getProvider(chainId)];\n\n        case 3:\n          provider = _b.sent();\n          events_1.emitEvent('account-available');\n          accountAvailable = true;\n          return [4, initSigningClient()];\n\n        case 4:\n          _b.sent();\n\n          _b.label = 5;\n\n        case 5:\n          return [2];\n      }\n    });\n  });\n}\n\nexports.gripApp = gripApp;\n\nfunction initClient() {\n  return __awaiter(this, void 0, void 0, function () {\n    return __generator(this, function (_a) {\n      if (client) return [2];\n      if (!config) throw new Error('No configuration was set');\n      client = new secretjs_1.CosmWasmClient(config.restUrl);\n      return [2];\n    });\n  });\n}\n\nfunction initSigningClient() {\n  return __awaiter(this, void 0, void 0, function () {\n    var restUrl, address, signer, seed, broadcastMode;\n    return __generator(this, function (_a) {\n      if (signingClient) return [2];\n      if (!config) throw new Error('No configuration was set');\n      if (!client) throw new Error('No client available');\n      if (!provider) throw new Error('No provider available');\n      restUrl = config.restUrl;\n      if (!provider) return [2];\n      address = provider.getAddress();\n      signer = provider.getSigner();\n      seed = provider.getSeed();\n      broadcastMode = config.broadcastMode;\n      signingClient = new secretjs_1.SigningCosmWasmClient(restUrl, address, signer, seed, customFees, broadcastMode);\n      return [2];\n    });\n  });\n}\n\nfunction bootstrap() {\n  return __awaiter(this, void 0, void 0, function () {\n    var chainId;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (!getProvider) throw new Error('No provider available');\n          return [4, initClient()];\n\n        case 1:\n          _a.sent();\n\n          return [4, getChainId()];\n\n        case 2:\n          chainId = _a.sent();\n          return [4, getProvider(chainId)];\n\n        case 3:\n          provider = _a.sent();\n          events_1.emitEvent('account-available');\n          accountAvailable = true;\n          return [4, initSigningClient()];\n\n        case 4:\n          _a.sent();\n\n          localStorage.setItem('connected', 'connected');\n          return [2];\n      }\n    });\n  });\n}\n\nexports.bootstrap = bootstrap;\n\nfunction shutdown() {\n  var connected = localStorage.getItem('connected');\n  if (!connected) return;\n  events_1.emitEvent('shutdown');\n  localStorage.removeItem('connected');\n}\n\nexports.shutdown = shutdown;\n\nfunction queryContract(address, queryMsg, addedParams, codeHash) {\n  if (!client) throw new Error('No client available');\n  return client.queryContractSmart(address, queryMsg, addedParams, codeHash);\n}\n\nexports.queryContract = queryContract;\n\nfunction executeContract(contractAddress, handleMsg, memo, transferAmount, fee, codeHash) {\n  return __awaiter(this, void 0, void 0, function () {\n    return __generator(this, function (_a) {\n      if (!signingClient) throw new Error('No signing client available');\n      return [2, signingClient.execute(contractAddress, handleMsg, memo, transferAmount, fee, codeHash)];\n    });\n  });\n}\n\nexports.executeContract = executeContract;\n\nfunction getKeplrAccountProvider() {\n  var _this = this;\n\n  return function (chainId) {\n    return __awaiter(_this, void 0, void 0, function () {\n      var keplr, e_1, offlineSigner, address, enigmaUtils;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4, wallet_1.getKeplr()];\n\n          case 1:\n            keplr = _a.sent();\n            if (!keplr || !window.getOfflineSigner) throw new Error('Install keplr extension');\n            _a.label = 2;\n\n          case 2:\n            _a.trys.push([2, 4,, 5]);\n\n            return [4, keplr.enable(chainId)];\n\n          case 3:\n            _a.sent();\n\n            return [3, 5];\n\n          case 4:\n            e_1 = _a.sent();\n            return [2];\n\n          case 5:\n            offlineSigner = window.getOfflineSigner(chainId);\n            return [4, offlineSigner.getAccounts()];\n\n          case 6:\n            address = _a.sent()[0].address;\n            enigmaUtils = keplr.getEnigmaUtils(chainId);\n            window.addEventListener('keplr_keystorechange', function () {\n              events_1.emitEvent('account-change');\n            });\n            return [2, {\n              getAddress: function getAddress() {\n                return address;\n              },\n              getSigner: function getSigner() {\n                return offlineSigner;\n              },\n              getSeed: function getSeed() {\n                return enigmaUtils;\n              }\n            }];\n        }\n      });\n    });\n  };\n}\n\nexports.getKeplrAccountProvider = getKeplrAccountProvider;\n\nfunction getChainId() {\n  if (!client) throw new Error('No client available');\n  return client.getChainId();\n}\n\nexports.getChainId = getChainId;\n\nfunction getHeight() {\n  if (!client) throw new Error('No client available');\n  return client.getHeight();\n}\n\nexports.getHeight = getHeight;\n\nfunction instantiate(codeId, initMsg, label) {\n  if (!signingClient) throw new Error('No signing client available');\n  return signingClient.instantiate(codeId, initMsg, label);\n}\n\nexports.instantiate = instantiate;\n\nfunction getContracts(codeId) {\n  if (!client) throw new Error('No client available');\n  return client === null || client === void 0 ? void 0 : client.getContracts(codeId);\n}\n\nexports.getContracts = getContracts;\n\nfunction getClient() {\n  if (!client) throw new Error('No client available');\n  return client;\n}\n\nexports.getClient = getClient;\n\nfunction getSigningClient() {\n  if (!signingClient) throw new Error('No singing client available');\n  return signingClient;\n}\n\nexports.getSigningClient = getSigningClient;\n\nfunction getNativeCoinBalance() {\n  return __awaiter(this, void 0, void 0, function () {\n    var address, account;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (!client) throw new Error('No client available');\n          address = getAddress();\n          if (!address) throw new Error('No address available');\n          return [4, client.getAccount(address)];\n\n        case 1:\n          account = _a.sent();\n          if (!account) throw new Error('No account exiting on chain');\n          if (account.balance.length == 0) return [2, '0'];\n          return [2, account.balance[0].amount];\n      }\n    });\n  });\n}\n\nexports.getNativeCoinBalance = getNativeCoinBalance;","map":null,"metadata":{},"sourceType":"script"}