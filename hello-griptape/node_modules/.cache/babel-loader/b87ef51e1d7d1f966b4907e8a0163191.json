{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar encoding_1 = require(\"@iov/encoding\");\n\nvar _encoding_1$Encoding = encoding_1.Encoding,\n    fromBase64 = _encoding_1$Encoding.fromBase64,\n    fromHex = _encoding_1$Encoding.fromHex;\n\nfunction isStdTx(txValue) {\n  var memo = txValue.memo,\n      msg = txValue.msg,\n      fee = txValue.fee,\n      signatures = txValue.signatures;\n  return typeof memo === \"string\" && Array.isArray(msg) && typeof fee === \"object\" && Array.isArray(signatures);\n}\n\nexports.isStdTx = isStdTx;\n\nfunction isMsgSend(msg) {\n  return msg.type === \"cosmos-sdk/MsgSend\";\n}\n\nexports.isMsgSend = isMsgSend;\n\nfunction isMsgStoreCode(msg) {\n  return msg.type === \"wasm/MsgStoreCode\";\n}\n\nexports.isMsgStoreCode = isMsgStoreCode;\n\nfunction isMsgInstantiateContract(msg) {\n  return msg.type === \"wasm/MsgInstantiateContract\";\n}\n\nexports.isMsgInstantiateContract = isMsgInstantiateContract;\n\nfunction isMsgExecuteContract(msg) {\n  return msg.type === \"wasm/MsgExecuteContract\";\n}\n\nexports.isMsgExecuteContract = isMsgExecuteContract;\n\nfunction extractContractMsg(msg) {\n  if (msg.type === \"wasm/MsgExecuteContract\") {\n    return encoding_1.Encoding.fromBase64(msg.value.msg);\n  }\n  /*  if (msg.type === \"wasm/MsgInstantiateContract\")  */\n  else {\n    return encoding_1.Encoding.fromBase64(msg.value.init_msg);\n  }\n}\n\nexports.extractContractMsg = extractContractMsg;\nexports.pubkeyType = {\n  /** @see https://github.com/tendermint/tendermint/blob/v0.33.0/crypto/ed25519/ed25519.go#L22 */\n  secp256k1: \"tendermint/PubKeySecp256k1\",\n\n  /** @see https://github.com/tendermint/tendermint/blob/v0.33.0/crypto/secp256k1/secp256k1.go#L23 */\n  ed25519: \"tendermint/PubKeyEd25519\",\n\n  /** @see https://github.com/tendermint/tendermint/blob/v0.33.0/crypto/sr25519/codec.go#L12 */\n  sr25519: \"tendermint/PubKeySr25519\"\n};\nexports.pubkeyTypes = [exports.pubkeyType.secp256k1, exports.pubkeyType.ed25519, exports.pubkeyType.sr25519];\n\nfunction parseWasmData(_ref) {\n  var key = _ref.key,\n      val = _ref.val;\n  return {\n    key: fromHex(key),\n    val: fromBase64(val)\n  };\n}\n\nexports.parseWasmData = parseWasmData;","map":null,"metadata":{},"sourceType":"script"}